services:
  esb:
    build:
      context: .
      dockerfile: ESB.Dockerfile
    container_name: esb_core
    command: uvicorn esb_core.main:app --host 0.0.0.0 --port 8001
    ports:
      - "8001:8001"
  users_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: users_service
    depends_on:
      users_db:
        condition: service_healthy
    environment:
      DB_HOST: users_db
      DB_PORT: "5432"
      DB_NAME: users
      DB_USER: postgres
      DB_PASSWORD: password
    command: uvicorn service_users.main:app --host 0.0.0.0 --port 8002
    ports:
      - "8002:8002"
  users_db:
    image: postgres:13
    container_name: users_db
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  membership_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: membership_service
    depends_on:
      membership_db:
        condition: service_healthy
    environment:
      DB_HOST: membership_db
      DB_PORT: "5432"
      DB_NAME: membership
      DB_USER: postgres
      DB_PASSWORD: password
      SERVICE_MODULE: service_membership
    command: uvicorn service_membership.main:app --host 0.0.0.0 --port 8004
    ports:
      - "8004:8004"
  membership_db:
    image: postgres:13
    container_name: membership_db
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  providers_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: providers_service
    depends_on:
      providers_db:
        condition: service_healthy
    environment:
      DB_HOST: providers_db
      DB_PORT: "5432"
      DB_NAME: providers
      DB_USER: postgres
      DB_PASSWORD: password
      SERVICE_MODULE: service_providers
    command: uvicorn service_providers.main:app --host 0.0.0.0 --port 8005
    ports:
      - "8005:8005"
  providers_db:
    image: postgres:13
    container_name: providers_db
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  catalog_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: catalog_service
    depends_on:
      catalog_db:
        condition: service_healthy
    environment:
      DB_HOST: catalog_db
      DB_PORT: "5432"
      DB_NAME: catalog
      DB_USER: postgres
      DB_PASSWORD: password
      SERVICE_MODULE: service_catalog
    command: uvicorn service_catalog.main:app --host 0.0.0.0 --port 8006
    ports:
      - "8006:8006"
  catalog_db:
    image: postgres:13
    container_name: catalog_db
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  acess_service:
    build:
      context: .
      dockerfile: ESB.Dockerfile # Don't ask why, just do it
    container_name: access_service
    environment:
      SERVICE_MODULE: service_access
    command: uvicorn service_access.main:app --host 0.0.0.0 --port 8007
    ports:
      - "8007:8007"